{"version":3,"file":"main.css","mappings":"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;CACvB;CACA;EACC,uBAAuB;CACxB;;CAEA;EACC,aAAa;EACb,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;;CAGC;EACC,WAAW;EACX,gBAAgB;CACjB;CACA;EACC,WAAW;EACX,8CAA8C;EAC9C,YAAY;EACZ,eAAe;EACf,eAAe;EACf,kBAAkB;CACnB;;CAEA;GACE,eAAe;GACf,gBAAgB;GAChB,mBAAmB;GACnB,gBAAgB;GAChB,sBAAsB;GACtB,2BAA2B;GAC3B,WAAW;CACb;;CAEA;EACC,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kCAAkC;EAClC,sBAAsB;EACtB,YAAY;AACd,C;ACrDA,wCAAW,oBACY,CACrB,iBAAkB,CAClB,UAAW,CACX,WAAY,CACb,4CACc,iBACK,CAClB,UAAW,CACX,WAAY,CACZ,iBAAkB,CAClB,eAAgB,CAChB,sDAAwC,CACzC,yDAC2B,OAClB,CACR,QAAS,CACT,kBAAmB,CACpB,yDAC2B,OAClB,CACR,SAAU,CACV,qBAAsB,CACvB,yDAC2B,OAClB,CACR,SAAU,CACV,qBAAsB,CACvB,yDAC2B,QACjB,CACT,QAAS,CACT,qBAAsB,CACvB,yDAC2B,QACjB,CACT,SAAU,CACV,qBAAsB,CACvB,yDAC2B,QACjB,CACT,SAAU,CACV,qBAAsB,CACvB,yDAC2B,QACjB,CACT,QAAS,CACT,qBAAsB,CACvB,yDAC2B,QACjB,CACT,SAAU,CACV,qBAAsB,CACvB,yDAC2B,QACjB,CACT,SAAU,CACV,qBAAsB,CACvB,mCACoB,QACT,SACE,CACX,IACI,WACS,CACb;AAnEH,67HAA67H,C;AC4D77H,sBAAQ,YACO,CACb,cAAe,CACf,SAAU,CACV,MAAO,CACP,KAAM,CACN,UAAW,CACX,WAAY,CACZ,aAAc,CACd,2BAA4B,CAC5B,gCAAiC,CAClC,2BAGY,wBACc,CACzB,eAAgB,CAChB,YAAa,CACb,qBAAsB,CACtB,eAAgB,CAChB,SAAU,CACX,6BAEc,iBACK,CACnB,6BAEc,iBACK,CACnB,8BAEe,UACH,CACX,iBAAkB;AA7FpB,6xHAA6xH,C;AC8B7xH,kDAAqB,QACV,CACT,SAAU,CACV,eAAgB,CACjB,qDAEuB,QACb,CACT,YAAa,CACb,4BAA6B,CAC9B,2DAE6B,qBACN,CACvB,4DAE8B,qBACP;AA/CxB,yzDAAyzD,C;AC6GxzD,oBAAM,gBACY,CACjB,UAAW,CACX,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,0BAA2B,CAC3B,0BACW,eACK,CAChB,SAAU,CACV,YAAa,CACb,iCAAkC,CAClC,iBAAkB,CAClB,sBAAuB;AA3HzB,6mJAA6mJ,C","sources":["webpack://psikon-weather-station-ui/./src/styles/global.css","webpack://psikon-weather-station-ui/./src/Loader.svelte","webpack://psikon-weather-station-ui/./src/Modal.svelte","webpack://psikon-weather-station-ui/./src/WiFiList.svelte","webpack://psikon-weather-station-ui/./src/App.svelte"],"sourcesContent":["* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n }\n body {\n  font-family: Sans-Serif;\n }\n\n fieldset {\n  padding: 10px;\n  margin-bottom: 10px;\n  text-align: left;\n}\n\nhr {\n  margin-top: 5px;\n  margin-bottom: 5px;\n}\n\n\n .form-group {\n  width: 100%;\n  margin-top: 20px;\n }\n .form-group input {\n  width: 100%;\n  border: 1.5px solid rgba(128, 128, 128, 0.418);\n  padding: 5px;\n  font-size: 18px;\n  margin-top: 5px;\n  border-radius: 4px;\n }\n\n button {\n   font-size: 18px;\n   padding: 4px 8px;\n   border-radius: 32px;\n   box-shadow: none;\n   border: 2px solid #000;\n   background-color: lightblue;\n   margin: 2px;\n }\n\n .text-right {\n  text-align: right;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.warning-container {\n  background-color:rgb(183, 169, 86);\n  border: 1px solid #666;\n  padding: 4px;\n}","<div class=\"lds-grid\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n\n<style>\n.lds-grid {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n.lds-grid div {\n  position: absolute;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: #555;\n  animation: lds-grid 1.2s linear infinite;\n}\n.lds-grid div:nth-child(1) {\n  top: 8px;\n  left: 8px;\n  animation-delay: 0s;\n}\n.lds-grid div:nth-child(2) {\n  top: 8px;\n  left: 32px;\n  animation-delay: -0.4s;\n}\n.lds-grid div:nth-child(3) {\n  top: 8px;\n  left: 56px;\n  animation-delay: -0.8s;\n}\n.lds-grid div:nth-child(4) {\n  top: 32px;\n  left: 8px;\n  animation-delay: -0.4s;\n}\n.lds-grid div:nth-child(5) {\n  top: 32px;\n  left: 32px;\n  animation-delay: -0.8s;\n}\n.lds-grid div:nth-child(6) {\n  top: 32px;\n  left: 56px;\n  animation-delay: -1.2s;\n}\n.lds-grid div:nth-child(7) {\n  top: 56px;\n  left: 8px;\n  animation-delay: -0.8s;\n}\n.lds-grid div:nth-child(8) {\n  top: 56px;\n  left: 32px;\n  animation-delay: -1.2s;\n}\n.lds-grid div:nth-child(9) {\n  top: 56px;\n  left: 56px;\n  animation-delay: -1.6s;\n}\n@keyframes lds-grid {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n</style>","<script>\nimport { createEventDispatcher, afterUpdate } from \"svelte\";\n\nexport let title = '';\nexport let open = false;\nexport let id = '';\n\nconst dispatch = createEventDispatcher();\n\nfunction hideModal() {\n  const el = document.getElementById(id);\n  if (!el) {\n    console.warn('Modal for id ' + id + ' does not exist');\n  } else if (el.style.display !== 'none') {\n    dispatch('closed', {});\n    el.style.display = 'none';\n  }\n}\n\nfunction showModal() {\n  const el = document.getElementById(id);\n  if (!el) {\n    console.warn('Modal for id ' + id + ' does not exist');\n  } else if (el.style.display !== 'block') {\n    el.style.display = 'block';\n    dispatch('shown', {});\n  }\n\n}\n\nfunction closeButton() {\n  open = false;\n}\n\n\nafterUpdate(() => {\n  (open) ? showModal() : hideModal();\n});\n\n</script>\n<div class=\"modal\" id={id}>\n  <div class=\"modal-body\">\n    <div class=\"modal-header\">\n      <slot name=\"modal-header\">\n        <h1>{title}</h1>\n      </slot>\n    </div>\n    <div class=\"modal-content\">\n      <slot></slot>\n    </div>\n    <div class=\"modal-footer\">\n      <slot name=\"modal-footer\">\n        <button type=\"button\" id={id + '-close-button'} on:click={closeButton}>Close</button>\n      </slot>\n    </div>\n  </div>\n\n</div>\n\n<style>\n\n.modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content/Box */\n.modal-body {\n  background-color: #fefefe;\n  margin: 15% auto; /* 15% from the top and centered */\n  padding: 20px;\n  border: 1px solid #888;\n  max-width: 400px;\n  width: 90%;\n}\n\n.modal-header {\n  text-align: center;\n}\n\n.modal-footer {\n  text-align: center;\n}\n\n.modal-content {\n  clear: both;\n  text-align: center;\n}\n\n\n</style>","<script>\n\nexport let networks = [];\n\nimport { createEventDispatcher } from 'svelte';\n\nconst dispatch = createEventDispatcher();\n\nfunction selectNetwork(network) {\n  dispatch('network', network);\n}\n\n</script>\n\n<div class=\"wifi-list-container\">\n{#if networks.length == 0}\n  <p>No wifi networks available.</p>\n{:else}\n  <ul class=\"wifi-networks-list\">\n    {#each networks as network}\n      <li on:click={() => selectNetwork(network)}>\n        { network.ssid }\n      </li>\n    {/each}\n  </ul>\n{/if}\n\n</div>\n\n<style>\n\n.wifi-networks-list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n.wifi-networks-list li {\n  margin: 0;\n  padding: 10px;\n  border-bottom: 1px solid #333;\n}\n\n.wifi-networks-list li:hover {\n  background-color: #eee;\n}\n\n.wifi-networks-list li:active {\n  background-color: blue;\n}\n\n</style>","<script>\nimport MqttForm from \"./MqttForm.svelte\";\nimport WiFiForm from \"./WiFiForm.svelte\";\nimport { getStatus, restart, reset } from './api';\nimport { Router, Route, navigate } from 'svelte-navigator';\nimport { onMount } from \"svelte\";\nimport Loader from \"./Loader.svelte\";\n\n\nlet restarted = false;\nlet loading   = true;\nlet status = {\n  ipAddr: '0.0.0.0',\n  wifiFailed: false,\n  mqttFailed: false,\n  hasWifiConfig: false\n}\n\nasync function restartServer() {\n  restarted = true;\n  await restart();\n}\n\nasync function resetServer() {\n  restarted = true;\n  await reset();\n}\n\nfunction goto(path) {\n  return () => {\n    navigate('/' + path);\n  }\n}\n\nfunction reload() {\n  window.location.reload();\n}\n\nasync function ping() {\n  loading = true;\n  status = await getStatus();\n  loading = false;\n}\n\nonMount(() => {\n  ping();\n})\n</script>\n\n<main>\n  {#if restarted}\n  <section class=\"container\">\n    <h1>Server Restarted</h1>\n    <p>\n      The server has been restarted. If the wifi settings have changed, then the IP address of your server may have changed as well.\n    </p>\n    <button type=\"button\" on:click={reload}>Reload</button>\n  </section>\n  {:else}\n  <section class=\"container text-center\">\n    <h1 on:click={goto('')}>\n        Psikon Weather Station\n    </h1>\n    <p>Version: 0.0.1</p>\n\n    <hr/>\n    {#if loading}\n      <Loader/>\n    {:else}\n      {#if status.wifiFailed}\n        <div class=\"warning-container\">\n          The WiFi connection has failed.\n        </div>\n      {/if}\n      {#if status.mqttFailed}\n        <div class=\"warning-container\">\n          The MQTT connection has failed.\n        </div>\n      {/if}\n      {#if !status.hasWifiConfig}\n        <div class=\"warning-container\">\n          No WiFi configuration found.\n        </div>\n      {/if}\n      <Router>\n        <Route path=\"/sensors\">\n          <h1>Sensors</h1>\n        </Route>\n        <Route path=\"/wifi-form\">\n          <WiFiForm/>\n        </Route>\n        <Route path=\"/mqtt-form\">\n          <MqttForm/>\n        </Route>\n        <Route>\n          <h3>Choose a Section:</h3>\n          <button type=\"button\" on:click={goto('sensors')}>View Sensor</button><br/>\n          <button type=\"button\" on:click={goto('wifi-form')}>WiFi Settings</button><br/>\n          <button type=\"button\" on:click={goto('mqtt-form')}>MQTT Settings</button><br/>\n          <button type=\"button\" on:click={restartServer}>Restart Server</button><br/>\n          <button type=\"button\" on:click={resetServer}>Reset All Configuration</button>\n        </Route>\n      </Router>\n    {/if}\n  </section>\n  {/if}\n</main>\n\n\n<style>\n main {\n  min-height: 100vh;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: aliceblue;\n }\n .container {\n  max-width: 400px;\n  width: 90%;\n  padding: 20px;\n  box-shadow: 0px 0px 20px #00000020;\n  border-radius: 8px;\n  background-color: white;\n }\n\n</style>"],"names":[],"sourceRoot":""}